# 锚点定义
defaults: &defaults
  type: http
  interval: 86400
  proxy: Singapore
  behavior: classical
  format: yaml

domain-defaults: &domain-defaults
  <<: *defaults
  behavior: domain
  format: mrs

ipcidr-defaults: &ipcidr-defaults
  <<: *defaults
  behavior: ipcidr
  format: mrs

classical-defaults: &classical-defaults
  <<: *defaults
  behavior: classical
  format: yaml

# port: 7890 # HTTP(S) 代理服务器端口
# socks-port: 7891 # SOCKS5 代理端口
mixed-port: 12138 # HTTP(S) 和 SOCKS 代理混合端口
# redir-port: 7892 # 透明代理端口，用于 Linux 和 MacOS
# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7893
allow-lan: true
bind-address: '*'
#  find-process-mode has 3 values:always, strict, off
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 mihomo 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: off
mode: rule
log-level: warning
ipv6: false
udp: true
geodata-mode: false
unified-delay: false
tcp-concurrent: true
enable-process: true
profile:
  store_fake_ip: true
  store_selected: true
external-controller: 0.0.0.0:9090
secret: '101300'
authentication: # http,socks 入口的验证用户名，密码
  - 'huai:12138password'
skip-auth-prefixes: # 设置跳过验证的 IP 段
  - 10.0.0.0/24 # 仅允许 10.0.0.1-10.0.0.255
  - 127.0.0.1/8
external-ui: ui
#external-ui-name: yacd
global-client-fingerprint: chrome
external-ui-url: 'https://github.com/Zephyruso/zashboard/releases/latest/download/dist.zip'
sniffer:
  enable: true
  sniff: {QUIC: {ports: [443]}, TLS: {ports: [443, 8443]}, HTTP: {ports: [80, 8080-8880], override-destination: true}}
  skip-domain: ['Mijia Cloud', 'dlg.io.mi.com', '+.apple.com', '*.baidu.com']
  force-domain: ['google.com']
tun: {enable: true, device: mihomo, stack: system, dns-hijack: ['any:53'], auto-route: true, auto-detect-interface: true, strict-route: true}

hosts:
  'openwrt': '10.0.0.1' # 替换为实际的路由器IP地址
  'nas': '10.0.0.21' # 替换为实际的NAS IP地址
  'ax6s': '10.0.0.2' # 替换为实际的路由器IP地址
  'homeassistant.local': '10.0.0.21' # 替换为实际的HomeAssistant IP地址
dns:
  enable: true
  listen: '127.0.0.1:1053'
  ipv6: false
  #  enhanced-mode: redir-host
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16 # fake-ip 池设置
  fake-ip-filter-mode: blacklist
  fake-ip-filter: ['+.lan', '+.local', '+.nas', 'localhost.ptlogin2.qq.com', '+.msftconnecttest.com', '+.msftncsi.com', '+.googleapis.com', '+.googleapis.cn', 'alt1-mtalk.google.com', 'alt2-mtalk.google.com', 'alt3-mtalk.google.com', 'alt4-mtalk.google.com', 'alt5-mtalk.google.com', 'alt6-mtalk.google.com', 'alt7-mtalk.google.com', 'alt8-mtalk.google.com', 'mtalk.google.com', '+.huaihuaidehuaihuai.top', '+.huai.ink', '+.suckless.top']
  use-hosts: false # 启用系统hosts查询
  default-nameserver: [1.1.1.1, 223.5.5.5]
  proxy-server-nameserver: [1.1.1.1, 114.114.114.114, 223.5.5.5]
  nameserver: [https://cloudflare-dns.com/dns-query#Proxy]
  nameserver-policy:
    rule-set:proxy: 'https://cloudflare-dns.com/dns-query#Proxy'
    rule-set:bilibili: 'https://dns.alidns.com/dns-query#DIRECT'
    rule-set:xiaomi: 'https://dns.alidns.com/dns-query#DIRECT'
    rule-set:onedrive: 'https://cloudflare-dns.com/dns-query#Proxy'
    rule-set:openai: 'https://cloudflare-dns.com/dns-query#OpenAi'
    rule-set:pikpak-download: 'https://dns.alidns.com/dns-query#PikPak-Download'
    rule-set:pikpak: 'https://cloudflare-dns.com/dns-query#PikPak'
    rule-set:unionpay: 'https://dns.alidns.com/dns-query#DIRECT'
    rule-set:alibaba: 'https://dns.alidns.com/dns-query#DIRECT'
    rule-set:meituan: 'https://dns.alidns.com/dns-query#DIRECT'
    rule-set:jd: 'https://dns.alidns.com/dns-query#DIRECT'
    rule-set:adguard: 'https://cloudflare-dns.com/dns-query#Proxy'
    rule-set:tmdb: 'https://cloudflare-dns.com/dns-query#Proxy'
    rule-set:docker: 'https://cloudflare-dns.com/dns-query#Proxy'
    rule-set:reddit: 'https://cloudflare-dns.com/dns-query#Proxy'
    rule-set:speedtest: 'https://cloudflare-dns.com/dns-query#SpeedTest'
    rule-set:wikimedia: 'https://cloudflare-dns.com/dns-query#Proxy'
    rule-set:javdb: 'https://cloudflare-dns.com/dns-query#Proxy'
    rule-set:apkpure: 'https://cloudflare-dns.com/dns-query#Proxy'
    rule-set:steam: 'https://cloudflare-dns.com/dns-query#Steam'
    rule-set:tiktok: 'https://cloudflare-dns.com/dns-query#TikTok'
    rule-set:github: 'https://cloudflare-dns.com/dns-query#Proxy'
    rule-set:youtube: 'https://cloudflare-dns.com/dns-query#Google'
    rule-set:google: 'https://cloudflare-dns.com/dns-query#Google'
    rule-set:telegram: 'https://cloudflare-dns.com/dns-query#Telegram'
    rule-set:netflix: 'https://cloudflare-dns.com/dns-query#Netflix'
    rule-set:twitter: 'https://cloudflare-dns.com/dns-query#Proxy'
    rule-set:microsoft: 'https://dns.alidns.com/dns-query#DIRECT'
    rule-set:cn: 'https://dns.alidns.com/dns-query#DIRECT'

proxies: []

proxy-groups:
  - {name: Proxy, type: select, include-all-proxies: true, proxies: [Singapore, Korea, Hong Kong, TaiWan, United States, Japan, DIRECT]}
  - {name: Google, type: select, proxies: [Singapore, Proxy, Hong Kong, TaiWan, Korea, United States, Japan]}
  - {name: OpenAi, type: select, proxies: [Singapore, Proxy, United States, TaiWan, Korea, Hong Kong, Japan]}
  - {name: Telegram, type: select, proxies: [Singapore, Proxy, United States, TaiWan, Korea, Hong Kong, Japan]}
  - {name: TikTok, type: select, proxies: [Japan, Proxy, Singapore, Hong Kong, TaiWan, Korea, United States]}
  - {name: Steam, type: select, proxies: [Hong Kong, Proxy, Singapore, TaiWan, United States, Korea, Japan, DIRECT]}
  - {name: Netflix, type: select, proxies: [Singapore, Proxy, Hong Kong, TaiWan, United States, Korea, Japan]}
  - {name: PikPak, type: select, proxies: [Singapore, Proxy, Hong Kong, TaiWan, United States, Korea, Japan]}
  - {name: PikPak-Download, type: select, proxies: [DIRECT, Proxy, Singapore, TaiWan, Hong Kong, Korea, United States, Japan]}
  - {name: SpeedTest, type: select, proxies: [Proxy, Hong Kong, Singapore, TaiWan, United States, Korea, Japan, DIRECT]}
  - {name: Final, type: select, proxies: [DIRECT, Proxy, Hong Kong, Singapore, TaiWan, United States, Korea, Japan]}
  - {name: Korea, filter: '(?i)(韩国|kr|korea)', include-all-proxies: true, type: load-balance, url: https://cp.cloudflare.com/generate_204, interval: 60, lazy: true, strategy: consistent-hashing}
  - {name: TaiWan, filter: '(?i)(台湾|tw|taiwan|tai wan)', include-all-proxies: true, type: load-balance, url: https://cp.cloudflare.com/generate_204, interval: 60, lazy: true, strategy: consistent-hashing}
  - {name: Hong Kong, filter: '(?i)(香港|hk|hong)', include-all-proxies: true, type: load-balance, url: https://cp.cloudflare.com/generate_204, interval: 60, lazy: true, strategy: consistent-hashing}
  - {name: Japan, filter: '(?i)(日本|jp|japan)', include-all-proxies: true, type: load-balance, url: https://cp.cloudflare.com/generate_204, interval: 60, lazy: true, strategy: consistent-hashing}
  - {name: United States, filter: '(?i)(美国|us|united|america)', include-all-proxies: true, type: load-balance, url: https://cp.cloudflare.com/generate_204, interval: 60, lazy: true, strategy: consistent-hashing}
  - {name: Singapore, filter: '(?i)(新加坡|sg|singapore)', include-all-proxies: true, type: load-balance, url: https://cp.cloudflare.com/generate_204, interval: 60, lazy: true, strategy: consistent-hashing}
rule-providers:
  adguard:
    <<: *domain-defaults
    path: ./rules/adguard.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/adguard.mrs
  alibaba:
    <<: *domain-defaults
    path: ./rules/alibaba.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/alibaba.mrs
  apkpure:
    <<: *domain-defaults
    path: ./rules/apkpure.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/apkpure.mrs
  bilibili:
    <<: *domain-defaults
    path: ./rules/bilibili.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/bilibili.mrs
  cn:
    <<: *domain-defaults
    path: ./rules/cn.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/cn.mrs
  cn-ip:
    <<: *ipcidr-defaults
    path: ./rules/cn-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/cn.mrs
  docker:
    <<: *domain-defaults
    path: ./rules/docker.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/docker.mrs
  github:
    <<: *domain-defaults
    path: ./rules/github.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/github.mrs
  google:
    <<: *domain-defaults
    path: ./rules/google.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/google.mrs
  google-ip:
    <<: *ipcidr-defaults
    path: ./rules/google-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/google.mrs
  javdb:
    <<: *domain-defaults
    path: ./rules/javdb.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/javdb.mrs
  jd:
    <<: *domain-defaults
    path: ./rules/jd.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/jd.mrs
  meituan:
    <<: *domain-defaults
    path: ./rules/meituan.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/meituan.mrs
  microsoft:
    <<: *domain-defaults
    path: ./rules/microsoft.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/microsoft.mrs
  netflix:
    <<: *domain-defaults
    path: ./rules/netflix.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/netflix.mrs
  netflix-ip:
    <<: *ipcidr-defaults
    path: ./rules/netflix-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/netflix.mrs
  onedrive:
    <<: *domain-defaults
    path: ./rules/onedrive.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/onedrive.mrs
  openai:
    <<: *domain-defaults
    path: ./rules/openai.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/openai.mrs
  pikpak:
    <<: *domain-defaults
    path: ./rules/pikpak.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/pikpak.mrs
  pikpak-download:
    <<: *classical-defaults
    path: ./rules/pikpak-download.yaml
    url: https://raw.githubusercontent.com/huai12138/free/refs/heads/main/pikpak-download.yaml
  proxy:
    <<: *domain-defaults
    path: ./rules/proxy.mrs
    url: https://raw.githubusercontent.com/huai12138/free/refs/heads/main/proxy.mrs
  reddit:
    <<: *domain-defaults
    path: ./rules/reddit.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/reddit.mrs
  speedtest:
    <<: *domain-defaults
    path: ./rules/speedtest.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/speedtest.mrs
  steam:
    <<: *domain-defaults
    path: ./rules/steam.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/steam.mrs
  telegram:
    <<: *domain-defaults
    path: ./rules/telegram.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/telegram.mrs
  telegram-ip:
    <<: *ipcidr-defaults
    path: ./rules/telegram-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/telegram.mrs
  tiktok:
    <<: *domain-defaults
    path: ./rules/tiktok.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/tiktok.mrs
  tmdb:
    <<: *domain-defaults
    path: ./rules/tmdb.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/tmdb.mrs
  twitter:
    <<: *domain-defaults
    path: ./rules/twitter.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/twitter.mrs
  twitter-ip:
    <<: *ipcidr-defaults
    path: ./rules/twitter-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/twitter.mrs
  unionpay:
    <<: *domain-defaults
    path: ./rules/unionpay.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/unionpay.mrs
  wikimedia:
    <<: *domain-defaults
    path: ./rules/wikimedia.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/wikimedia.mrs
  xiaomi:
    <<: *domain-defaults
    path: ./rules/xiaomi.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/xiaomi.mrs
  youtube:
    <<: *domain-defaults
    path: ./rules/youtube.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/youtube.mrs

rules:
  # 本地网络优先
  - DOMAIN-SUFFIX,local,DIRECT
  - DOMAIN-SUFFIX,lan,DIRECT
  - IP-CIDR,127.0.0.0/8,DIRECT
  - IP-CIDR,10.0.0.0/24,DIRECT
  - SRC-IP-CIDR,10.0.0.18/32,DIRECT # 小爱音响
  - SRC-IP-CIDR,10.0.0.28/32,DIRECT # 小米智能插座
  - SRC-IP-CIDR,10.0.0.13/32,DIRECT # 小米电暖器
  - SRC-IP-CIDR,10.0.0.14/32,DIRECT # 小米小饭煲
  - RULE-SET,proxy,Proxy
  - RULE-SET,xiaomi,DIRECT
  - RULE-SET,bilibili,DIRECT
  - RULE-SET,onedrive,Proxy
  - RULE-SET,openai,OpenAi
  - RULE-SET,pikpak-download,PikPak-Download
  - RULE-SET,pikpak,PikPak
  - RULE-SET,unionpay,DIRECT
  - RULE-SET,alibaba,DIRECT
  - RULE-SET,meituan,DIRECT
  - RULE-SET,jd,DIRECT
  - RULE-SET,adguard,Proxy
  - RULE-SET,tmdb,Proxy
  - RULE-SET,docker,Proxy
  - RULE-SET,reddit,Proxy
  - RULE-SET,speedtest,SpeedTest
  - RULE-SET,wikimedia,Proxy
  - RULE-SET,javdb,Proxy
  - RULE-SET,apkpure,Proxy
  - RULE-SET,steam,Steam
  - RULE-SET,tiktok,TikTok
  - RULE-SET,github,Proxy
  - RULE-SET,youtube,Google
  - RULE-SET,google,Google
  - RULE-SET,google-ip,Google
  - RULE-SET,telegram,Telegram
  - RULE-SET,telegram-ip,Telegram
  - RULE-SET,netflix,Netflix
  - RULE-SET,netflix-ip,Netflix
  - RULE-SET,twitter,Proxy
  - RULE-SET,twitter-ip,Proxy
  - RULE-SET,microsoft,DIRECT
  - RULE-SET,cn,DIRECT
  - RULE-SET,cn-ip,DIRECT
  - MATCH,Final
