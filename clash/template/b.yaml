# 锚点定义
defaults: &defaults
  type: http
  interval: 86400
  proxy: Singapore
  behavior: classical
  format: yaml

domain-defaults: &domain-defaults
  <<: *defaults
  behavior: domain
  format: mrs

ipcidr-defaults: &ipcidr-defaults
  <<: *defaults
  behavior: ipcidr
  format: mrs

classical-defaults: &classical-defaults
  <<: *defaults
  behavior: classical
  format: yaml

# port: 7890 # HTTP(S) 代理服务器端口
# socks-port: 7891 # SOCKS5 代理端口
mixed-port: 12138 # HTTP(S) 和 SOCKS 代理混合端口
# redir-port: 7892 # 透明代理端口，用于 Linux 和 MacOS
# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7893
allow-lan: true
bind-address: "*"
#  find-process-mode has 3 values:always, strict, off
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 mihomo 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: off # always, strict, off
mode: rule # global, rule, direct
log-level: warning # info, warning, error, debug
ipv6: false
udp: true
geodata-mode: false
unified-delay: false
tcp-concurrent: true
enable-process: true
# global-ua: "Mozilla/5.0 (X11; CrOS x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
profile:
  store_fake_ip: true
  store_selected: true
external-controller: 0.0.0.0:9090
secret: "101300"
authentication: # http,socks 入口的验证用户名，密码
  - "huai:12138password"
skip-auth-prefixes: # 设置跳过验证的 IP 段
  - 10.0.0.0/24 # 仅允许 10.0.0.1-10.0.0.255
  - 127.0.0.1/8 # 仅允许 127.0.0.0-127.255.255.255 (本地回环地址)
  - 192.168.0.0/16 # 仅允许 192.168.0.0-192.168.255.255
external-ui: ui
#external-ui-name: yacd
global-client-fingerprint: chrome
external-ui-url: "https://github.com/Zephyruso/zashboard/releases/latest/download/dist.zip"
sniffer:
  enable: true
  sniff:
    {
      QUIC: { ports: [443] },
      TLS: { ports: [443, 8443] },
      HTTP: { ports: [80, 8080-8880], override-destination: true },
    }
  skip-domain: ["Mijia Cloud", "dlg.io.mi.com", "+.apple.com", "*.baidu.com"]
  force-domain: ["google.com"]
tun:
  enable: true # 是否启用 tun 模式
  device: mihomo # tun device name
  stack: system # system, gvisor, mixed
  dns-hijack: ["any:53"] # DNS 拦截
  auto-route: true # 自动路由
  auto-detect-interface: true # 自动检测接口
  strict-route: true # 严格路由模式
  endpoint-independent-nat: true # 是否启用端点无关的 NAT

hosts:
  "openwrt": "10.0.0.1" # 替换为实际的路由器IP地址
  "nas": "10.0.0.21" # 替换为实际的NAS IP地址
  "ax6s": "10.0.0.2" # 替换为实际的路由器IP地址
  "homeassistant.local": "10.0.0.21" # 替换为实际的HomeAssistant IP地址
dns:
  enable: true
  listen: "127.0.0.1:1053"
  ipv6: false
  enhanced-mode: fake-ip # fake-ip, redir-host
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "+.lan"
    - "+.local"
    - "+.nas"
    - "localhost.ptlogin2.qq.com"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "+.googleapis.com"
    - "+.googleapis.cn"
    - "alt1-mtalk.google.com"
    - "alt2-mtalk.google.com"
    - "alt3-mtalk.google.com"
    - "alt4-mtalk.google.com"
    - "alt5-mtalk.google.com"
    - "alt6-mtalk.google.com"
    - "alt7-mtalk.google.com"
    - "alt8-mtalk.google.com"
    - "mtalk.google.com"
    - "mtalk-dev.google.com"
    - "mtalk-staging.google.com"
    - "mtalk4.google.com"
    - "+.huaihuaidehuaihuai.top"
    - "+.huai.ink"
    - "+.suckless.top"
  use-hosts: true # 是否使用配置中设置的hosts
  use-system-hosts: false # 是否使用系统hosts
  default-nameserver: [1.1.1.1, 223.5.5.5]
  proxy-server-nameserver: ["https://dns.alidns.com/dns-query"]
  nameserver: [https://cloudflare-dns.com/dns-query#Proxy]
  nameserver-policy:
    "rule-set:proxy": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:gfw": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:googlefcm": "https://cloudflare-dns.com/dns-query#Google"
    "rule-set:firefox": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:bilibili": "https://dns.alidns.com/dns-query#DIRECT"
    "rule-set:xiaomi": "https://dns.alidns.com/dns-query#DIRECT"
    "rule-set:onedrive": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:openai": "https://cloudflare-dns.com/dns-query#OpenAi"
    "rule-set:pikpak-download": "https://dns.alidns.com/dns-query#PikPak-Download"
    "rule-set:pikpak": "https://cloudflare-dns.com/dns-query#Singapore"
    "rule-set:unionpay": "https://dns.alidns.com/dns-query#DIRECT"
    "rule-set:alibaba": "https://dns.alidns.com/dns-query#DIRECT"
    "rule-set:meituan": "https://dns.alidns.com/dns-query#DIRECT"
    "rule-set:jd": "https://dns.alidns.com/dns-query#DIRECT"
    "rule-set:adguard": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:tmdb": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:docker": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:reddit": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:speedtest": "https://cloudflare-dns.com/dns-query#SpeedTest"
    "rule-set:spotify": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:wikimedia": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:javdb": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:apkpure": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:steam": "https://cloudflare-dns.com/dns-query#Steam"
    "rule-set:tiktok": "https://cloudflare-dns.com/dns-query#TikTok"
    "rule-set:github": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:youtube": "https://cloudflare-dns.com/dns-query#Google"
    "rule-set:google": "https://cloudflare-dns.com/dns-query#Google"
    "rule-set:telegram": "https://cloudflare-dns.com/dns-query#Telegram"
    "rule-set:netflix": "https://cloudflare-dns.com/dns-query#Netflix"
    "rule-set:twitter": "https://cloudflare-dns.com/dns-query#Proxy"
    "rule-set:microsoft": "https://dns.alidns.com/dns-query#DIRECT"
    "rule-set:cn": "https://dns.alidns.com/dns-query#DIRECT"

proxies: []

proxy-groups:
  - name: Proxy
    type: select
    filter: "(?i)^(?!.*(剩余|到期|限制|套餐|时间|官网|产品|平台|Traffic|Expire|x0.5)).*$"
    include-all-proxies: true
    proxies: [Singapore, United States, Japan, Hong Kong, Taiwan, DIRECT]
  - name: Google
    type: select
    proxies: [Proxy, Singapore, United States, Japan, Hong Kong, Taiwan]
  - name: OpenAi
    type: select
    proxies: [Proxy, Singapore, United States, Japan, Hong Kong, Taiwan]
  - name: Telegram
    type: select
    proxies: [Proxy, Singapore, United States, Japan, Hong Kong, Taiwan]
  - name: TikTok
    type: select
    proxies: [Proxy, Singapore, United States, Japan, Hong Kong, Taiwan]
  - name: Steam
    type: select
    proxies: [Proxy, Singapore, United States, Japan, Hong Kong, Taiwan]
  - name: Netflix
    type: select
    proxies: [Proxy, Singapore, United States, Japan, Hong Kong, Taiwan]
  - name: PikPak-Download
    type: select
    proxies: [DIRECT, Proxy, Singapore, United States, Japan, Hong Kong, Taiwan]
  - name: SpeedTest
    type: select
    proxies: [Proxy, Singapore, United States, Japan, Hong Kong, Taiwan]
  - name: Taiwan
    filter: "(?i)(台湾|tw|taiwan)(?!.*(家宽|isp))"
    include-all-proxies: true
    type: load-balance
    url: http://www.gstatic.com/generate_204
    interval: 60
    # lazy: true
    strategy: consistent-hashing
  - name: Hong Kong
    filter: "(?i)(香港|hk|hong)(?!.*(家宽|isp|x0.5))"
    include-all-proxies: true
    type: load-balance
    url: http://www.gstatic.com/generate_204
    interval: 60
    #  lazy: true
    strategy: consistent-hashing
  - name: Japan
    filter: "(?i)(日本|jp|japan)"
    include-all-proxies: true
    type: load-balance
    url: http://www.gstatic.com/generate_204
    interval: 60
    #  lazy: true
    strategy: consistent-hashing
  - name: United States
    filter: "(?i)(美国|us|united|america)"
    include-all-proxies: true
    type: load-balance
    url: http://www.gstatic.com/generate_204
    interval: 60
    # lazy: true
    strategy: consistent-hashing
  - name: Singapore
    filter: "(?i)(新加坡|sg|singapore)"
    include-all-proxies: true
    type: load-balance
    url: http://www.gstatic.com/generate_204
    interval: 60
    # lazy: true
    strategy: consistent-hashing
  - name: Final
    type: select
    proxies: [DIRECT, Proxy, Singapore, United States, Japan, Hong Kong, Taiwan]
    filter: "(?i)^(?!.*(剩余|到期|限制|套餐|时间|官网|产品|平台|Traffic|Expire|x0.5)).*$"
    include-all-proxies: true
rule-providers:
  adguard:
    <<: *domain-defaults
    path: ./rules/adguard.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/adguard.mrs
  alibaba:
    <<: *domain-defaults
    path: ./rules/alibaba.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/alibaba.mrs
  apkpure:
    <<: *domain-defaults
    path: ./rules/apkpure.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/apkpure.mrs
  bilibili:
    <<: *domain-defaults
    path: ./rules/bilibili.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/bilibili.mrs
  cn:
    <<: *domain-defaults
    path: ./rules/cn.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/cn.mrs
  cn-ip:
    <<: *ipcidr-defaults
    path: ./rules/cn-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/cn.mrs
  docker:
    <<: *domain-defaults
    path: ./rules/docker.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/docker.mrs
  firefox:
    <<: *domain-defaults
    path: ./rules/firefox.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/firefox.mrs
  gfw:
    <<: *domain-defaults
    path: ./rules/gfw.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/gfw.mrs
  github:
    <<: *domain-defaults
    path: ./rules/github.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/github.mrs
  google:
    <<: *domain-defaults
    path: ./rules/google.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/google.mrs
  google-ip:
    <<: *ipcidr-defaults
    path: ./rules/google-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/google.mrs
  googlefcm:
    <<: *domain-defaults
    path: ./rules/googlefcm.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/googlefcm.mrs
  javdb:
    <<: *domain-defaults
    path: ./rules/javdb.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/javdb.mrs
  jd:
    <<: *domain-defaults
    path: ./rules/jd.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/jd.mrs
  meituan:
    <<: *domain-defaults
    path: ./rules/meituan.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/meituan.mrs
  microsoft:
    <<: *domain-defaults
    path: ./rules/microsoft.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/microsoft.mrs
  netflix:
    <<: *domain-defaults
    path: ./rules/netflix.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/netflix.mrs
  netflix-ip:
    <<: *ipcidr-defaults
    path: ./rules/netflix-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/netflix.mrs
  onedrive:
    <<: *domain-defaults
    path: ./rules/onedrive.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/onedrive.mrs
  openai:
    <<: *domain-defaults
    path: ./rules/openai.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/openai.mrs
  pikpak:
    <<: *domain-defaults
    path: ./rules/pikpak.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/pikpak.mrs
  pikpak-download:
    <<: *classical-defaults
    path: ./rules/pikpak-download.yaml
    url: https://raw.githubusercontent.com/huai12138/free/refs/heads/main/pikpak-download.yaml
  proxy:
    <<: *domain-defaults
    path: ./rules/proxy.mrs
    url: https://raw.githubusercontent.com/huai12138/free/refs/heads/main/proxy.mrs
  reddit:
    <<: *domain-defaults
    path: ./rules/reddit.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/reddit.mrs
  speedtest:
    <<: *domain-defaults
    path: ./rules/speedtest.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/speedtest.mrs
  spotify:
    <<: *domain-defaults
    path: ./rules/spotify.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/spotify.mrs
  steam:
    <<: *domain-defaults
    path: ./rules/steam.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/steam.mrs
  telegram:
    <<: *domain-defaults
    path: ./rules/telegram.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/telegram.mrs
  telegram-ip:
    <<: *ipcidr-defaults
    path: ./rules/telegram-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/telegram.mrs
  tiktok:
    <<: *domain-defaults
    path: ./rules/tiktok.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/tiktok.mrs
  tmdb:
    <<: *domain-defaults
    path: ./rules/tmdb.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/tmdb.mrs
  twitter:
    <<: *domain-defaults
    path: ./rules/twitter.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/twitter.mrs
  twitter-ip:
    <<: *ipcidr-defaults
    path: ./rules/twitter-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/twitter.mrs
  unionpay:
    <<: *domain-defaults
    path: ./rules/unionpay.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/unionpay.mrs
  wikimedia:
    <<: *domain-defaults
    path: ./rules/wikimedia.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/wikimedia.mrs
  xiaomi:
    <<: *domain-defaults
    path: ./rules/xiaomi.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/xiaomi.mrs
  youtube:
    <<: *domain-defaults
    path: ./rules/youtube.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/youtube.mrs

rules:
  #######################
  # 本地网络访问规则
  #######################
  - DOMAIN-SUFFIX,local,DIRECT
  - DOMAIN-SUFFIX,lan,DIRECT
  - IP-CIDR,127.0.0.0/8,DIRECT
  - IP-CIDR,10.0.0.0/24,DIRECT
  #######################
  # 直连规则
  #######################
  - DOMAIN-SUFFIX,suckless.top,DIRECT
  - DOMAIN-SUFFIX,huai.ink,DIRECT
  - DOMAIN-SUFFIX,huaihuaidehuaihuai.top,DIRECT
  #######################
  # 智能家居设备直连规则
  #######################
  - SRC-IP-CIDR,10.0.0.18/32,DIRECT # 小爱音响
  - SRC-IP-CIDR,10.0.0.28/32,DIRECT # 小米智能插座
  - SRC-IP-CIDR,10.0.0.13/32,DIRECT # 小米电暖器
  - SRC-IP-CIDR,10.0.0.14/32,DIRECT # 小米小饭煲

  #######################
  # 应用规则集分流配置
  #######################
  # 代理服务
  - RULE-SET,proxy,Proxy # 代理列表
  - RULE-SET,pikpak,Singapore # PikPak服务
  - RULE-SET,firefox,Proxy # Firefox服务
  # 国内应用直连
  - RULE-SET,xiaomi,DIRECT # 小米服务
  - RULE-SET,bilibili,DIRECT # B站
  - RULE-SET,unionpay,DIRECT # 银联支付
  - RULE-SET,alibaba,DIRECT # 阿里巴巴
  - RULE-SET,meituan,DIRECT # 美团
  - RULE-SET,jd,DIRECT # 京东

  # 国外服务代理
  - RULE-SET,onedrive,Proxy # OneDrive
  - RULE-SET,openai,OpenAi # OpenAI服务
  - RULE-SET,pikpak-download,PikPak-Download # PikPak下载

  - RULE-SET,adguard,Proxy # AdGuard
  - RULE-SET,tmdb,Proxy # TMDB影视资料库
  - RULE-SET,docker,Proxy # Docker服务
  - RULE-SET,reddit,Proxy # Reddit
  - RULE-SET,spotify,Proxy # Spotify音乐
  - RULE-SET,speedtest,SpeedTest # 网速测试
  - RULE-SET,wikimedia,Proxy # 维基媒体
  - RULE-SET,javdb,Proxy # JavDB
  - RULE-SET,apkpure,Proxy # APKPure

  # 游戏平台
  - RULE-SET,steam,Steam # Steam平台

  # 社交媒体
  - RULE-SET,tiktok,TikTok # TikTok
  - RULE-SET,youtube,Google # YouTube
  - RULE-SET,telegram,Telegram # Telegram
  - RULE-SET,telegram-ip,Telegram # Telegram IP
  - RULE-SET,twitter,Proxy # Twitter
  - RULE-SET,twitter-ip,Proxy # Twitter IP

  # 开发平台
  - RULE-SET,github,Proxy # GitHub

  # 流媒体服务
  - RULE-SET,netflix,Netflix # Netflix
  - RULE-SET,netflix-ip,Netflix # Netflix IP

  # 科技公司服务
  - RULE-SET,googlefcm,DIRECT # Google FCM服务
  - RULE-SET,google,Google # Google服务
  - RULE-SET,google-ip,Google # Google IP
  - RULE-SET,microsoft,DIRECT # 微软服务
  - RULE-SET,gfw,Proxy # GFW封锁列表
  # 中国大陆直连
  - RULE-SET,cn,DIRECT # 中国大陆域名
  - RULE-SET,cn-ip,DIRECT # 中国大陆IP

  # 未匹配规则
  - MATCH,Final # 最终规则
