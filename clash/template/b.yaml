port: 7890 # HTTP(S) 代理服务器端口
socks-port: 7891 # SOCKS5 代理端口
mixed-port: 12138 # HTTP(S) 和 SOCKS 代理混合端口
redir-port: 7892 # 透明代理端口，用于 Linux 和 MacOS
# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
tproxy-port: 7893
allow-lan: true
bind-address: "*"
#  find-process-mode has 3 values:always, strict, off
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 mihomo 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict # always, strict, off
mode: rule # global, rule, direct
log-level: warning # info, warning, error, debug
ipv6: false # 是否启用 IPv6
udp: true
geodata-mode: false
unified-delay: true
tcp-concurrent: true
global-ua: clash.meta
enable-process: true
# global-ua: "Mozilla/5.0 (X11; CrOS x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
profile:
  store_fake_ip: true
  store_selected: true
external-controller: "[::]:9090"
secret: "101300"
authentication: # http,socks 入口的验证用户名，密码
  - "huai:12138password"
skip-auth-prefixes: # 设置跳过验证的 IP 段
  - 10.0.0.0/24 # 仅允许 10.0.0.1-10.0.0.255
  - 127.0.0.1/8 # 仅允许 127.0.0.0-127.255.255.255 (本地回环地址)
  - 192.168.0.0/16 # 仅允许 192.168.0.0-192.168.255.255
external-ui: ui
#external-ui-name: yacd
global-client-fingerprint: chrome
routing-mark: 666
external-ui-url: "https://raw.githubusercontent.com/huai12138/free/refs/heads/main/dist-cdn-fonts.zip"
sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    QUIC:
      ports: [443, 8443]
    TLS:
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
  skip-domain:
    - "Mijia Cloud"
    - "dlg.io.mi.com"
    - "+.apple.com"
    - "*.baidu.com"
  force-domain:
    - "google.com"
tun:
  enable: true # 是否启用 tun 模式
  device: mihomo # tun device name
  stack: system # system, gvisor, mixed
  dns-hijack:
    - "any:53" # DNS 拦截
    - "tcp://any:53" # DNS 拦截
  auto-route: true # 自动路由
  udp-timeout: 300 # UDP 超时时间，单位：秒
  mtu: 1500 # 最大传输单元
  auto-detect-interface: true # 自动检测接口
  auto-redirect: true # 自动配置 iptables 以重定向 TCP 连接。仅支持 Linux。带有 auto-redirect 的 auto-route 现在可以在路由器上按预期工作，无需干预。
  strict-route: true # 严格路由模式
  endpoint-independent-nat: true # 是否启用端点无关的 NAT
hosts:
  "openwrt": "10.0.0.1" # 替换为实际的路由器IP地址
  "nas": "10.0.0.21" # 替换为实际的NAS IP地址
  "ax6s": "10.0.0.2" # 替换为实际的路由器IP地址
  "homeassistant.local": "10.0.0.21" # 替换为实际的HomeAssistant IP地址
ntp:
  enable: true
  write-to-system: false
  server: ntp.aliyun.com
  port: 123
  interval: 30
dns:
  enable: true
  prefer-h3: false
  listen: "[::]:1053"
  ipv6: false # 是否启用 IPv6
  ipv6-timeout: 100 # 单位：ms，内部双栈并发时，向上游查询 AAAA 时，等待 AAAA 的时间，默认 100ms
  enhanced-mode: fake-ip # fake-ip, redir-host
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "+.lan"
    - "+.local"
    - "+.nas"
    - "localhost.ptlogin2.qq.com"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "+.googleapis.com"
    - "+.googleapis.cn"
    - "alt1-mtalk.google.com"
    - "alt2-mtalk.google.com"
    - "alt3-mtalk.google.com"
    - "alt4-mtalk.google.com"
    - "alt5-mtalk.google.com"
    - "alt6-mtalk.google.com"
    - "alt7-mtalk.google.com"
    - "alt8-mtalk.google.com"
    - "mtalk.google.com"
    - "mtalk-dev.google.com"
    - "mtalk-staging.google.com"
    - "mtalk4.google.com"
    - "+.huai.ink"
    - "+.huaihuaidehuaihuai.top"
    - "+.ihuai.top"
    - "+.suckless.top"
    - "+.082500.xyz"
    - "+.202309.xyz"
  use-hosts: true # 是否使用配置中设置的hosts
  use-system-hosts: false # 是否使用系统hosts
  default-nameserver:
    # 添加IPv6 DNS服务器
    # - 2400:3200::1 # 阿里DNS IPv6
    # - 2400:3200:baba::1 # 阿里DNS IPv6
    # - 2606:4700:4700::1111 # Cloudflare IPv6 主要
    # - 2606:4700:4700::1001 # Cloudflare IPv6 备用（可选）
    # 添加IPv4 DNS服务器
    - 223.5.5.5 # 阿里DNS
    - 223.6.6.6 # 阿里DNS
    - 1.1.1.1 # Cloudflare 主要
    - 1.0.0.1 # Cloudflare 备用（可选）
  proxy-server-nameserver:
    - "https://dns.alidns.com/dns-query"
    - "https://doh.pub/dns-query"
    - "https://doh.onedns.net/dns-query"
  nameserver: [https://cloudflare-dns.com/dns-query#M]
  nameserver-policy:
    # 代理服务
    "rule-set:proxy": "https://cloudflare-dns.com/dns-query#M"
    "rule-set:gfw": "https://cloudflare-dns.com/dns-query#M"
    "rule-set:openwrt": "https://cloudflare-dns.com/dns-query#M"
    # 国内直连服务
    "rule-set:direct": "https://dns.alidns.com/dns-query#D"
    "rule-set:cn": "https://dns.alidns.com/dns-query#D"
    "rule-set:bilibili": "https://dns.alidns.com/dns-query#D"
    "rule-set:xiaomi": "https://dns.alidns.com/dns-query#D"
    "rule-set:unionpay": "https://dns.alidns.com/dns-query#D"
    "rule-set:alibaba": "https://dns.alidns.com/dns-query#D"
    "rule-set:meituan": "https://dns.alidns.com/dns-query#D"
    "rule-set:jd": "https://dns.alidns.com/dns-query#D"
    "rule-set:microsoft": "https://cloudflare-dns.com/dns-query#Microsoft"
    # 广告拦截服务
    "rule-set:category-ads-all": "rcode://refused"
    "rule-set:huawei": "rcode://refused"
    # 特定应用服务
    "rule-set:openai": "https://cloudflare-dns.com/dns-query#OpenAi"
    "rule-set:pikpak": "https://cloudflare-dns.com/dns-query#M"
    "rule-set:pikpak-download": "https://dns.alidns.com/dns-query#PikPak-Download"
    "rule-set:adguard": "https://cloudflare-dns.com/dns-query#M"
    "rule-set:tmdb": "https://cloudflare-dns.com/dns-query#M"
    "rule-set:docker": "https://cloudflare-dns.com/dns-query#M"
    "rule-set:reddit": "https://cloudflare-dns.com/dns-query#M"
    "rule-set:spotify": "https://cloudflare-dns.com/dns-query#M"
    "rule-set:wikimedia": "https://cloudflare-dns.com/dns-query#M"
    "rule-set:javdb": "https://cloudflare-dns.com/dns-query#M"
    "rule-set:apkpure": "https://cloudflare-dns.com/dns-query#M"
    "rule-set:steam": "https://cloudflare-dns.com/dns-query#Steam"
    "rule-set:mozilla": "https://cloudflare-dns.com/dns-query#M"
    "rule-set:github": "https://cloudflare-dns.com/dns-query#GitHub"
    # 社交媒体
    "rule-set:telegram": "https://cloudflare-dns.com/dns-query#Telegram"
    "rule-set:twitter": "https://cloudflare-dns.com/dns-query#M"
    "rule-set:tiktok": "https://cloudflare-dns.com/dns-query#TikTok"
    # 流媒体服务
    "rule-set:netflix": "https://cloudflare-dns.com/dns-query#Netflix"
    "rule-set:youtube": "https://cloudflare-dns.com/dns-query#Google"
    # Google服务
    "rule-set:googlefcm": "https://cloudflare-dns.com/dns-query#Google"
    "rule-set:google": "https://cloudflare-dns.com/dns-query#Google"
    # 测速服务
    "rule-set:speedtest": "https://cloudflare-dns.com/dns-query#SpeedTest"
    "rule-set:f-droid": "https://cloudflare-dns.com/dns-query#M"
proxies: []
proxy-groups:
  - name: M
    type: fallback
    proxies: [US, SG, TW, JP, HK, D]
    url: "https://cp.cloudflare.com"
    interval: 100

  - name: D
    type: select
    proxies: [DIRECT]

  - name: Google
    type: fallback
    proxies: [US, M, SG, JP]
    url: "https://cp.cloudflare.com"
    interval: 100

  - name: OpenAi
    type: fallback
    proxies: [US, M, SG, JP]
    url: "https://cp.cloudflare.com"
    interval: 100

  - name: Telegram
    type: fallback
    proxies: [US, M, SG, JP, HK]
    url: "https://cp.cloudflare.com"
    interval: 100

  - name: TikTok
    type: fallback
    proxies: [JP, M, SG, US, HK]
    url: "https://cp.cloudflare.com"
    interval: 100

  - name: Steam
    type: fallback
    proxies: [HK, SG, D]
    url: "https://cp.cloudflare.com"
    interval: 100

  - name: Netflix
    type: fallback
    proxies: [SG, M]
    url: "https://cp.cloudflare.com"
    interval: 100

  - name: PikPak-Download
    type: select
    proxies: [D, SG]

  - name: SpeedTest
    type: select
    proxies: [M, SG, US, JP, HK, TW]

  - name: GitHub
    type: fallback
    proxies: [HK, D]
    url: "https://cp.cloudflare.com"
    interval: 100

  - name: Microsoft
    type: fallback
    proxies: [HK, D]
    url: "https://cp.cloudflare.com"
    interval: 100

  - name: HK
    filter: "(?i)(香港|HK|hong)(?!.*(家宽|isp|小众|低倍率))"
    include-all-proxies: true
    type: url-test
    tolerance: 100
    url: https://cp.cloudflare.com
    interval: 60
    timeout: 3000
    max-failed-times: 3

  - name: JP
    filter: "(?i)(日本|jp|japan)(?!.*(家宽|isp|小众|低倍率))"
    include-all-proxies: true
    type: url-test
    tolerance: 100
    url: https://cp.cloudflare.com
    interval: 60
    timeout: 3000
    max-failed-times: 3

  - name: US
    filter: "(?i)(美国|us|united|america)(?!.*(家宽|isp|小众|低倍率))"
    include-all-proxies: true
    type: url-test
    tolerance: 100
    url: https://cp.cloudflare.com
    interval: 60
    timeout: 3000
    max-failed-times: 3

  - name: SG
    filter: "(?i)(新加坡|sg|singapore)(?!.*(家宽|isp|小众|低倍率))"
    include-all-proxies: true
    type: url-test
    tolerance: 100
    url: https://cp.cloudflare.com
    interval: 60
    timeout: 3000
    max-failed-times: 3

  - name: TW
    filter: "(?i)(台湾|taiwan|tw)(?!.*(家宽|isp|小众|低倍率))"
    include-all-proxies: true
    type: url-test
    tolerance: 100
    url: https://cp.cloudflare.com
    interval: 60
    timeout: 3000
    max-failed-times: 3

  - name: Default
    type: select
    proxies: [D, M, TW, SG, US, JP, HK]
    filter: "(?i)^(?!.*(剩余|到期|限制|套餐|时间|官网|产品|平台|Traffic|Expire|小众|0\\.[0-9]|DE|GB|低倍率)).*$"
    include-all-proxies: true

rule-providers:
  adguard:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/adguard.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/adguard.mrs
  alibaba:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/alibaba.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/alibaba.mrs
  apkpure:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/apkpure.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/apkpure.mrs
  bilibili:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/bilibili.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/bilibili.mrs
  category-ads-all:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/category-ads-all.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/category-ads-all.mrs
  cn:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/cn.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/cn.mrs
  cn-ip:
    type: http
    interval: 86400
    proxy: M
    behavior: ipcidr
    format: mrs
    path: ./rules/cn-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/cn.mrs
  docker:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/docker.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/docker.mrs
  direct:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/direct.mrs
    url: https://raw.githubusercontent.com/huai12138/free/refs/heads/main/direct.mrs
  direct-ip:
    type: http
    interval: 86400
    proxy: M
    behavior: ipcidr
    format: mrs
    path: ./rules/direct-ip.mrs
    url: https://raw.githubusercontent.com/huai12138/free/refs/heads/main/direct-ip.mrs
  mozilla:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/mozilla.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/mozilla.mrs
  gfw:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/gfw.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/gfw.mrs
  github:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/github.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/github.mrs
  google:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/google.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/google.mrs
  google-ip:
    type: http
    interval: 86400
    proxy: M
    behavior: ipcidr
    format: mrs
    path: ./rules/google-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/google.mrs
  googlefcm:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/googlefcm.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/googlefcm.mrs
  huawei:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/googlefcm.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/huawei.mrs
  javdb:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/javdb.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/javdb.mrs
  jd:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/jd.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/jd.mrs
  meituan:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/meituan.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/meituan.mrs
  microsoft:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/microsoft.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/microsoft.mrs
  netflix:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/netflix.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/netflix.mrs
  netflix-ip:
    type: http
    interval: 86400
    proxy: M
    behavior: ipcidr
    format: mrs
    path: ./rules/netflix-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/netflix.mrs
  openai:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/openai.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/openai.mrs
  openwrt:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/openwrt.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/openwrt.mrs
  pass-ip:
    type: http
    interval: 86400
    proxy: M
    behavior: classical
    format: yaml
    path: ./rules/pass-ip.yaml
    url: https://raw.githubusercontent.com/huai12138/free/refs/heads/main/pass-ip.yaml
  pikpak:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/pikpak.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/pikpak.mrs
  pikpak-download:
    type: http
    interval: 86400
    proxy: M
    behavior: classical
    format: yaml
    path: ./rules/pikpak-download.yaml
    url: https://raw.githubusercontent.com/huai12138/free/refs/heads/main/pikpak-download.yaml
  proxy:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/proxy.mrs
    url: https://raw.githubusercontent.com/huai12138/free/refs/heads/main/proxy.mrs
  reddit:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/reddit.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/reddit.mrs
  speedtest:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/speedtest.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/speedtest.mrs
  spotify:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/spotify.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/spotify.mrs
  steam:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/steam.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/steam.mrs
  telegram:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/telegram.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/telegram.mrs
  telegram-ip:
    type: http
    interval: 86400
    proxy: M
    behavior: ipcidr
    format: mrs
    path: ./rules/telegram-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/telegram.mrs
  tiktok:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/tiktok.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/tiktok.mrs
  tmdb:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/tmdb.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/tmdb.mrs
  twitter:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/twitter.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/twitter.mrs
  twitter-ip:
    type: http
    interval: 86400
    proxy: M
    behavior: ipcidr
    format: mrs
    path: ./rules/twitter-ip.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geoip/twitter.mrs
  unionpay:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/unionpay.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/unionpay.mrs
  wikimedia:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/wikimedia.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/wikimedia.mrs
  xiaomi:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/xiaomi.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/xiaomi.mrs
  youtube:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/youtube.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/youtube.mrs
  f-droid:
    type: http
    interval: 86400
    proxy: M
    behavior: domain
    format: mrs
    path: ./rules/f-droid.mrs
    url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/f-droid.mrs
rules:
  - "AND,((DST-PORT,443),(NETWORK,UDP)),REJECT"
  - "RULE-SET,huawei,REJECT"
  #######################
  # 本地网络访问规则
  #######################
  - "DOMAIN-SUFFIX,local,D"
  - "DOMAIN-SUFFIX,lan,D"
  - "IP-CIDR,127.0.0.0/8,D"
  - "IP-CIDR,10.0.0.0/24,D"
  #######################
  # 直连规则
  #######################
  - "RULE-SET,direct,D"
  - "RULE-SET,direct-ip,D"
  # 智能家居设备直连规则
  #######################
  - "RULE-SET,pass-ip,D"
  #######################
  # 应用规则集分流配置
  #######################
  # 代理服务
  - "RULE-SET,proxy,M" # 代理列表
  - "RULE-SET,pikpak,M" # PikPak服务
  - "RULE-SET,mozilla,M" # Firefox服务
  - "RULE-SET,openwrt,M" # OpenWRT服务
  # 国内应用直连
  - "RULE-SET,xiaomi,D" # 小米服务
  - "RULE-SET,bilibili,D" # B站
  - "RULE-SET,unionpay,D" # 银联支付
  - "RULE-SET,alibaba,D" # 阿里巴巴
  - "RULE-SET,meituan,D" # 美团
  - "RULE-SET,jd,D" # 京东
  # 国外服务代理
  - "RULE-SET,openai,OpenAi" # OpenAI服务
  - "RULE-SET,pikpak-download,PikPak-Download" # PikPak下载
  - "RULE-SET,adguard,M" # AdGuard
  - "RULE-SET,tmdb,M" # TMDB影视资料库
  - "RULE-SET,docker,M" # Docker服务
  - "RULE-SET,reddit,M" # Reddit
  - "RULE-SET,spotify,M" # Spotify音乐
  - "RULE-SET,speedtest,SpeedTest" # 网速测试
  - "RULE-SET,wikimedia,M" # 维基媒体
  - "RULE-SET,javdb,M" # JavDB
  - "RULE-SET,apkpure,M" # APKPure
  - "RULE-SET,f-droid,M" # F-Droid
  # 游戏平台
  - "RULE-SET,steam,Steam" # Steam平台
  # 社交媒体
  - "RULE-SET,tiktok,TikTok" # TikTok
  - "RULE-SET,youtube,Google" # YouTube
  - "RULE-SET,telegram,Telegram" # Telegram
  - "RULE-SET,telegram-ip,Telegram" # Telegram IP
  - "RULE-SET,twitter,M" # Twitter
  - "RULE-SET,twitter-ip,M" # Twitter IP
  # 开发平台
  - "RULE-SET,github,GitHub" # GitHub
  # 流媒体服务
  - "RULE-SET,netflix,Netflix" # Netflix
  - "RULE-SET,netflix-ip,Netflix" # Netflix IP
  # 科技公司服务
  - "RULE-SET,googlefcm,D" # Google FCM服务
  - "RULE-SET,google,Google" # Google服务
  - "RULE-SET,google-ip,Google" # Google IP
  - "RULE-SET,microsoft,Microsoft" # 微软服务
  - "RULE-SET,gfw,M" # GFW封锁列表
  # 中国大陆直连
  - "RULE-SET,cn,D" # 中国大陆域名
  - "RULE-SET,cn-ip,D" # 中国大陆IP
  # 广告拦截服务
  - "RULE-SET,category-ads-all,REJECT" # 广告拦截
  # 未匹配规则
  - "MATCH,Default" # 最终规则
